apply plugin: 'com.android.application'

repositories {
    jcenter()
    google()
}

android {
    compileSdkVersion 29
    buildToolsVersion '30.0.0'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionName "0.9.0"
        versionCode 90
        applicationId 'io.github.muntashirakon.callmeter'
    }

    lintOptions {
         checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    buildTypes {
        debug {
            versionNameSuffix "-debug"
            buildConfigField 'boolean', 'DEBUG_LOG', 'true'
        }

        nologDebug {
            versionNameSuffix "-debug"
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
            minifyEnabled true
            buildConfigField 'boolean', 'DEBUG_LOG', 'false'
        }

        logRelease {
            versionNameSuffix "-logRelease"
            minifyEnabled false
        }

        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
            minifyEnabled true
            buildConfigField 'boolean', 'DEBUG_LOG', 'false'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.2.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
}

task updateChangelog {
    def proc = 'shell/update-changelog.sh'.execute()
    proc.in.eachLine {line -> println line}
    proc.err.eachLine {line -> println 'ERROR: ' + line}
    proc.waitFor()
}

task removeUnfinishedTranslations {
    def proc = 'shell/remove-unfinished-translations.sh'.execute()
    proc.in.eachLine {line -> println line}
    proc.err.eachLine {line -> println 'ERROR: ' + line}
    proc.waitFor()
}

task readdUnfinishedTranslations {
    def proc = "git checkout CallMeter3G/src/main/res/values-*/*xml".execute()
    proc.in.eachLine {line -> println line}
    proc.err.eachLine {line -> println 'ERROR: ' + line}
    proc.waitFor()
}

tasks.whenTaskAdded { task ->
    if (task.name == 'mergeReleaseResources') {
        task.dependsOn updateChangelog
        task.dependsOn removeUnfinishedTranslations
    }
}
